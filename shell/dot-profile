# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# determine OS
#
if [ -x $HOME/bin/config.guess ]; then
   _OS=`$HOME/bin/config.guess`
fi
echo ""
if [ x$_OS = x ]; then
        echo "current OS is not detectable ... update $HOME/bin/config.guess"
else
        echo "current OS is $_OS"
fi

# determine HOME
#
echo home is $HOME

# determine SHELL
#
case "$SHELL" in
   */ash)       is=bash;;
   */bash)      is=bash;;
   */ksh)       is=ksh;;
   */rbash)     is=bash;;
   */tcsh)      is=tsch;;
   */zsh)       is=zsh;;
   *)           is=sh;;
esac
echo "using $is"
echo ""

# set propper prompt
#
case "$is" in
   bash)
      PS1='\[\e[0;33m\]\u@\[\e[0;33m\]\h[\[\e[0m\]\w\[\e[0;33m\]]\[\e[0;33m\]\$\e[0m\] '
      PS1R='\[\e[0;33m\](\[\e[0m\]$?\[\e[0;33m\])\t\[\e[0m\]'
      export PS1
      ;;
   zsh)
      PS1=$'%{\e[0;33m%}%n@%{\e[0;33m%}%B%m%b%{\e[0;33m%}[%{\e[0m%}%~%{\e[0;33m%}]%{\e[0;33m%}%(!.#.>)%{\e[0m%} '
      RPS1=$'%{\e[0;33m%}(%{\e[0m%}%?%{\e[0;33m%})%T%{\e[0m%}'
      export PS1 RPS1
      ;;
esac

# include some functions
#
if [ -r $HOME/.functions ]; then
   . $HOME/.functions
fi

# source paths
#
if [ -r $HOME/.paths ]; then
   echo "source .paths"
   . $HOME/.paths
fi

# source aliases
#
if test -f $HOME/.aliases; then
   . $HOME/.aliases
fi

# create profile for local exceptions
#
HOST=`hostname -s`
if [ ! -f $HOME/.profile.$HOST ]; then
   cp $HOME/run/etc/profile.hostname $HOME/.profile.$HOST
else
   . $HOME/.profile.$HOST
fi

export PATH LD_LIBRARY_PATH MANPATH PERLLIB OS

# setting locale and language
#
LC_ALL="de_DE.UTF-8"
export LC_ALL
LANG="de_DE.UTF-8"
LANGUAGE="$LANG"
export LANG LANGUAGE

# save history
#
HISTFILE=$HOME/.history.$HOST
HISTSIZE=1000
SAVEHIST=1000
export HISTSIZE HISTSIZE SAVEHIST

# editor settings
#
EDITOR=vim
export EDITOR

# bc stuff
#
BC_ENV_ARGS=-l
BC_SCALE_MAX=5
export BC_ENV_ARGS BC_SCALE_MAX

# automake
#
#CONFIG_SITE=$HOME/run/etc/config.site
#export CONFIG_SITE

# fzf
export FZF_TMUX=1
export FZF_DEFAULT_COMMAND='fd --type f --color=never --hidden'
export FZF_DEFAULT_OPTS='--no-height --color=bg+:#343d46,gutter:-1,pointer:#ff3c3c,info:#0dbc79,hl:#0dbc79,hl+:#23d18b'

export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--preview 'bat --color=always --line-range :50 {}'"

export FZF_ALT_C_COMMAND='fd --type d . --color=never --hidden'
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -50'"

#export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Proxys
#
no_proxy="localhost,127.0.0.1,::1,*.crylle.local"
export no_proxy
#http_proxy="http://proxy:3128/"
#https_proxy=$http_proxy
#ftp_proxy=$http_proxy
#export http_proxy https_proxy ftp_proxy
